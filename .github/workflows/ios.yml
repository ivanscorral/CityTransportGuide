name: iOS starter workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest
    steps:
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
            xcode-version: '14.3'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up CocoaPods
        run: sudo gem install cocoapods
      - name: Install Pod dependencies
        run: pod install
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | grep -E '16\.[4-9]|1[7-9]\.|[2-9][0-9]\.' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          workspace="`ls -A | grep -i \\.xcworkspace\$`"
          xcodebuild build-for-testing -scheme "$scheme" -workspace "$workspace" -destination "platform=$platform,name=$device"
      - name: Test
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | grep -E '16\.[4-9]|1[7-9]\.|[2-9][0-9]\.' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          workspace="`ls -A | grep -i \\.xcworkspace\$`"
          xcodebuild test-without-building -scheme "$scheme" -workspace "$workspace" -destination "platform=$platform,name=$device"

